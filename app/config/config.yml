imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
framework:
    translator:
      fallbacks: [en]
      paths:
        - '%kernel.root_dir%/Resources/translations'
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_themes:
        - 'SonataCoreBundle:Form:datepicker.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
      default_connection: default
      connections:
        default:
          driver: '%database_driver%'
          host: '%database_host%'
          port: '%database_port%'
          dbname: '%database_name%'
          user: '%database_user%'
          password: '%database_password%'
          charset:  utf8mb4
      types:
        json: Sonata\Doctrine\Types\JsonType
    orm:
      default_entity_manager: default
      auto_generate_proxy_classes: '%kernel.debug%'
      entity_managers:
        default:
          naming_strategy: doctrine.orm.naming_strategy.underscore
          auto_mapping: true
#          mappings:
#            SonataMediaBundle: ~

fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"


# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

jms_di_extra:
    annotation_patterns:
        - JMS\DiExtraBundle\Annotation
        - Sonata\AdminBundle\Annotation

sonata_admin:
    templates:
      layout:                         standard_layout.html.twig
      ajax:                           SonataAdminBundle::ajax_layout.html.twig
      list:                           SonataAdminBundle:CRUD:list.html.twig
      show:                           SonataAdminBundle:CRUD:show.html.twig
      show_compare:                   SonataAdminBundle:CRUD:show_compare.html.twig
      edit:                           SonataAdminBundle:CRUD:edit.html.twig
      history:                        SonataAdminBundle:CRUD:history.html.twig
      preview:                        SonataAdminBundle:CRUD:preview.html.twig
      delete:                         SonataAdminBundle:CRUD:delete.html.twig
      batch:                          SonataAdminBundle:CRUD:list__batch.html.twig
      acl:                            SonataAdminBundle:CRUD:acl.html.twig
      action:                         SonataAdminBundle:CRUD:action.html.twig
      select:                         SonataAdminBundle:CRUD:list__select.html.twig
      filter:                         SonataAdminBundle:Form:filter_admin_fields.html.twig
      dashboard:                      SonataAdminBundle:Core:dashboard.html.twig
      search:                         SonataAdminBundle:Core:search.html.twig
      user_block:                     user_block.html.twig
    security:
      # the default value
      handler: sonata.admin.security.handler.role

      # use this service if you want ACL
      handler: sonata.admin.security.handler.acl

sonata_block:
    default_contexts: [cms]
    blocks:
        # enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts: [admin]

        # ...
sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr it is mandatory to choose one here
    default_context: default # you need to set a context
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}
        people:
          providers:
                - sonata.media.provider.image

          formats:
              small: { width: 100 , height: 200, quality: 95}
              big:   { width: 200 , height: 400, quality: 90}

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  "%kernel.root_dir%/../web/uploads/media"
            create:     false
    providers:
        image:
            resizer: sonata.media.resizer.square

sonata_intl:
    timezone:
      default: Europe/Paris
      locales:
          en: Europe/Paris
          ru: Europe/London

doctrine_phpcr:
    # configure the PHPCR session
    session:
        backend:
            type: doctrinedbal
            # connection: default

            # requires DoctrineCacheBundle
            # caches:
            #     meta: doctrine_cache.providers.phpcr_meta
            #     nodes: doctrine_cache.providers.phpcr_nodes
            # enable logging
            logging: true
            # enable profiling in the debug toolbar.
            profiling: true
        workspace: '%phpcr_workspace%'
        username:  '%phpcr_user%'
        password:  '%phpcr_pass%'
    odm:
        auto_mapping: true
        mappings:
            SonataMediaBundle:
                prefix: Sonata\MediaBundle\PHPCR
jms_di_extra:
    cache_warmer:
        enabled: false
